import S3FileInput from './s3file_input';
import S3FileOutput from './s3file_output';
import KinesisInput from './kinesis_input';
import KinesisOutput from './kinesis_output';
import ConsoleOutput from './console_output';
import UnzipTransformation from './unzip_transformation';
import CloudfrontLogTransformation from './cloudfront_log_transformation';

export default class AdapterRegistry {
  constructor() {
    this.adapters = {
      S3FileInput,
      S3FileOutput,
      KinesisInput,
      KinesisOutput,
      ConsoleOutput,
      UnzipTransformation,
      CloudfrontLogTransformation
    };
  }

  adapterFor(className, opts) {
    if (this.adapters[className]) {
      return new this.adapters[className](opts);
    } else {
      throw "No adapter registered with name '" + className + '"';
    }
  }

  register(className) {
    if (className || typeof className != "Object") {
      this.adapters[className.name] = className;
    } else {
      throw "Empty adapter class";
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9waXBlbGluZS9hZGFwdGVycy9hZGFwdGVyX3JlZ2lzdHJ5LmpzIl0sIm5hbWVzIjpbIlMzRmlsZUlucHV0IiwiUzNGaWxlT3V0cHV0IiwiS2luZXNpc0lucHV0IiwiS2luZXNpc091dHB1dCIsIkNvbnNvbGVPdXRwdXQiLCJVbnppcFRyYW5zZm9ybWF0aW9uIiwiQ2xvdWRmcm9udExvZ1RyYW5zZm9ybWF0aW9uIiwiQWRhcHRlclJlZ2lzdHJ5IiwiY29uc3RydWN0b3IiLCJhZGFwdGVycyIsImFkYXB0ZXJGb3IiLCJjbGFzc05hbWUiLCJvcHRzIiwicmVnaXN0ZXIiLCJuYW1lIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxXQUFQLE1BQXdCLGdCQUF4QjtBQUNBLE9BQU9DLFlBQVAsTUFBeUIsaUJBQXpCO0FBQ0EsT0FBT0MsWUFBUCxNQUF5QixpQkFBekI7QUFDQSxPQUFPQyxhQUFQLE1BQTBCLGtCQUExQjtBQUNBLE9BQU9DLGFBQVAsTUFBMEIsa0JBQTFCO0FBQ0EsT0FBT0MsbUJBQVAsTUFBZ0Msd0JBQWhDO0FBQ0EsT0FBT0MsMkJBQVAsTUFBd0MsaUNBQXhDOztBQUVBLGVBQWUsTUFBTUMsZUFBTixDQUFzQjtBQUNuQ0MsZ0JBQWM7QUFDWixTQUFLQyxRQUFMLEdBQWdCO0FBQ2RULGlCQURjO0FBRWRDLGtCQUZjO0FBR2RDLGtCQUhjO0FBSWRDLG1CQUpjO0FBS2RDLG1CQUxjO0FBTWRDLHlCQU5jO0FBT2RDO0FBUGMsS0FBaEI7QUFTRDs7QUFFREksYUFBV0MsU0FBWCxFQUFzQkMsSUFBdEIsRUFBNEI7QUFDMUIsUUFBSSxLQUFLSCxRQUFMLENBQWNFLFNBQWQsQ0FBSixFQUE4QjtBQUM1QixhQUFPLElBQUksS0FBS0YsUUFBTCxDQUFjRSxTQUFkLENBQUosQ0FBNkJDLElBQTdCLENBQVA7QUFDRCxLQUZELE1BRU87QUFDTCxZQUFNLHNDQUFzQ0QsU0FBdEMsR0FBa0QsR0FBeEQ7QUFDRDtBQUNGOztBQUVERSxXQUFTRixTQUFULEVBQW9CO0FBQ2xCLFFBQUlBLGFBQWEsT0FBT0EsU0FBUCxJQUFvQixRQUFyQyxFQUErQztBQUM3QyxXQUFLRixRQUFMLENBQWNFLFVBQVVHLElBQXhCLElBQWdDSCxTQUFoQztBQUNELEtBRkQsTUFFTztBQUNMLFlBQU0scUJBQU47QUFDRDtBQUNGO0FBM0JrQyIsImZpbGUiOiJhZGFwdGVyX3JlZ2lzdHJ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFMzRmlsZUlucHV0IGZyb20gJy4vczNmaWxlX2lucHV0JztcbmltcG9ydCBTM0ZpbGVPdXRwdXQgZnJvbSAnLi9zM2ZpbGVfb3V0cHV0JztcbmltcG9ydCBLaW5lc2lzSW5wdXQgZnJvbSAnLi9raW5lc2lzX2lucHV0JztcbmltcG9ydCBLaW5lc2lzT3V0cHV0IGZyb20gJy4va2luZXNpc19vdXRwdXQnO1xuaW1wb3J0IENvbnNvbGVPdXRwdXQgZnJvbSAnLi9jb25zb2xlX291dHB1dCc7XG5pbXBvcnQgVW56aXBUcmFuc2Zvcm1hdGlvbiBmcm9tICcuL3VuemlwX3RyYW5zZm9ybWF0aW9uJztcbmltcG9ydCBDbG91ZGZyb250TG9nVHJhbnNmb3JtYXRpb24gZnJvbSAnLi9jbG91ZGZyb250X2xvZ190cmFuc2Zvcm1hdGlvbic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFkYXB0ZXJSZWdpc3RyeSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuYWRhcHRlcnMgPSB7XG4gICAgICBTM0ZpbGVJbnB1dCxcbiAgICAgIFMzRmlsZU91dHB1dCxcbiAgICAgIEtpbmVzaXNJbnB1dCxcbiAgICAgIEtpbmVzaXNPdXRwdXQsXG4gICAgICBDb25zb2xlT3V0cHV0LFxuICAgICAgVW56aXBUcmFuc2Zvcm1hdGlvbixcbiAgICAgIENsb3VkZnJvbnRMb2dUcmFuc2Zvcm1hdGlvbixcbiAgICB9XG4gIH1cblxuICBhZGFwdGVyRm9yKGNsYXNzTmFtZSwgb3B0cykge1xuICAgIGlmICh0aGlzLmFkYXB0ZXJzW2NsYXNzTmFtZV0pIHtcbiAgICAgIHJldHVybiBuZXcgdGhpcy5hZGFwdGVyc1tjbGFzc05hbWVdKG9wdHMpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBcIk5vIGFkYXB0ZXIgcmVnaXN0ZXJlZCB3aXRoIG5hbWUgJ1wiICsgY2xhc3NOYW1lICsgJ1wiJ1xuICAgIH1cbiAgfVxuXG4gIHJlZ2lzdGVyKGNsYXNzTmFtZSkge1xuICAgIGlmIChjbGFzc05hbWUgfHwgdHlwZW9mIGNsYXNzTmFtZSAhPSBcIk9iamVjdFwiKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJzW2NsYXNzTmFtZS5uYW1lXSA9IGNsYXNzTmFtZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgXCJFbXB0eSBhZGFwdGVyIGNsYXNzXCJcbiAgICB9XG4gIH1cbn0iXX0=